{
	"info": {
		"_postman_id": "1ca5818d-70ef-4310-b3b3-75d85479147c",
		"name": "covid tracking test API",
		"description": "Requirements: https://covidtracking.com/data/api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Data object",
			"item": [
				{
					"name": "values not null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"No null values are found\", () =>{\r",
									"const jsonData = pm.response.json()[0];\r",
									"const nullValFound = Object.fromEntries(Object.entries(jsonData).filter(([key, value]) => value === null));\r",
									"\r",
									"pm.expect(nullValFound).to.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/us/current.json",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"us",
								"current.json"
							],
							"query": [
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deprecated labels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const deprectdLabels = ['dateChecked', 'hospitalized', 'lastModified', 'posNeg', 'total'];\r",
									"pm.test('All deprecated labels removed', () => {\r",
									"    const jsonData = pm.response.json()[0];\r",
									"\r",
									"    const existedLabels = Array.from(Object.keys(jsonData));\r",
									"    const matched = deprectdLabels.filter(val => existedLabels.includes(val));\r",
									"    // console.log(matched)\r",
									"\r",
									"    pm.expect(matched, `Labels [ ${matched.join(', ')} ] are present:`).to.be.empty;\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/us/current.json",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"us",
								"current.json"
							],
							"query": [
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "new labels exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newLabels = ['hospitalizedCumulative', 'lastUpdateET'];\r",
									"pm.test('New labels have been added', () => {\r",
									"    const jsonData = pm.response.json()[0];\r",
									"\r",
									"    const existedLabels = Array.from(Object.keys(jsonData));\r",
									"    const matched = newLabels.filter(val => !existedLabels.includes(val));\r",
									"    // console.log(matched)\r",
									"    pm.expect(matched, `Labels [ ${matched.join(', ')} ] are missed:`).to.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/us/current.json",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"us",
								"current.json"
							],
							"query": [
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "date check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Recent Date Update', () => {\r",
									"    const dateUpdate = pm.response.json()[0].dateChecked,\r",
									"         dateUpdateMs = Date.parse(dateUpdate),\r",
									"         now = new Date(),\r",
									"         nowMs = Date.parse(now),\r",
									"         msInOneDay =  24 * 60 * 60 * 1000;\r",
									"    \r",
									"    // compare the day of last update  WITH (current day - 1 day) (in ms):\r",
									"    let recentUpd;\r",
									"    (dateUpdateMs > ( nowMs - msInOneDay))? recentUpd = true: recentUpd = false;\r",
									"    pm.expect(recentUpd, 'Date not updated').to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/us/current.json",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"us",
								"current.json"
							],
							"query": [
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Health check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Health Check\",  () => {\r",
							"    const errors={};\r",
							"    try {\r",
							"        pm.response.to.have.status(200);\r",
							"    } catch(err) {\r",
							"        errors.StatusCode = err.message;\r",
							"    }\r",
							"    try {\r",
							"        pm.response.to.have.status(\"OK\");\r",
							"    } catch(err) {\r",
							"       errors.StatusName = err.message; \r",
							"    }\r",
							"    try { \r",
							"        pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"\r",
							"    } catch(err) {\r",
							"        errors.ResponseTime = err.message;\r",
							"    }\r",
							"    try {\r",
							"        pm.expect(pm.response.text()).to.not.include(\"error\");\r",
							"    } catch(err) {\r",
							"        errors.ErrorInResponse = \"There is an error word in response(body)\";\r",
							"    }\r",
							"\r",
							"    if(Object.keys(errors).length){\r",
							"        pm.expect.fail(JSON.stringify(errors, null, 2));\r",
							"    }  \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/us/current.json",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"us",
						"current.json"
					],
					"query": [
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "404 - mistake in URL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\",  () => {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/us/current.jso",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"us",
						"current.jso"
					],
					"query": [
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "header values",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Headers are OK\", () => {\r",
							"  pm.response.to.have.header(\"Last-Modified\");\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/us/current.json",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"us",
						"current.json"
					],
					"query": [
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http redirect to https",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 301 with redirect\",  () => {\r",
							"    const redirect = 'https://api.covidtracking.com/v1/us/current.json';\r",
							"    pm.response.to.have.status(301);\r",
							"    pm.expect(pm.response.headers.get('Location')).to.eql(redirect);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://api.covidtracking.com/v1/us/current.json",
					"protocol": "http",
					"host": [
						"api",
						"covidtracking",
						"com"
					],
					"path": [
						"v1",
						"us",
						"current.json"
					],
					"query": [
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "405 - POST not allowed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 405\",  () => {\r",
							"    pm.response.to.have.status(405);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/us/current.json",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"us",
						"current.json"
					],
					"query": [
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "405 - PUT not allowed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 405\",  () => {\r",
							"    pm.response.to.have.status(405);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/us/current.json",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"us",
						"current.json"
					],
					"query": [
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://api.covidtracking.com"
		}
	]
}